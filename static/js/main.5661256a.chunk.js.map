{"version":3,"sources":["App.js","index.js"],"names":["App","formik","useFormik","initialValues","brandname","partnumber","location","description","quantity","min","expiry","file","product","validationSchema","Yup","required","onSubmit","values","alert","JSON","stringify","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Segment","stacked","padding","minHeight","backgroundColor","color","Divider","Form","handleSubmit","Field","control","Select","fluid","search","name","label","placeholder","options","key","value","text","onChange","event","setFieldValue","onBlur","handleBlur","error","touched","errors","TextArea","type","width","border","borderRadius","columns","Input","Group","Button","marginBottom","float","marginRight","ReactDOM","render","document","getElementById"],"mappings":"uPA8OeA,MAzOf,WAAgB,IAAD,IAWPC,EAASC,YAAU,CACvBC,cAAe,CACbC,UAAW,GACTC,WAAY,GACZC,SAAU,GACVC,YAAY,GACZC,SAAU,GACVC,IAAK,GACLC,OAAO,GACPC,KAAK,GACLC,QAAQ,IAEZC,iBAAkBC,IAAW,CAC3BV,UAAWU,MACJC,SAAS,0BACdV,WAAYS,MACPC,SAAS,8BACdT,SAAUQ,MACLC,SAAS,YACdP,SAAUM,MACLC,SAAS,YACdN,IAAKK,MACAC,SAAS,YACdL,OAAQI,MAAaC,SAAS,YAC9BR,YAAaO,MACRC,SAAS,YACdJ,KAAMG,MACDC,SAAS,YACdH,QAASE,MACJC,SAAS,cAElBC,SAAU,SAACC,GACTC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,OAIvC,OACE,cAACI,EAAA,EAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,SAAnE,SACQ,cAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAhC,SACA,eAACC,EAAA,EAAD,CAASC,SAAO,EAACN,MAAO,CAACO,QAAQ,GAAIC,UAAU,IAAIC,gBAAgB,WAAnE,UACG,oBAAIT,MAAO,CAACU,MAAM,QAAlB,oCACA,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMZ,MAAO,CAACD,UAAU,QAASN,SAAUf,EAAOmC,aAAlD,UACR,cAACD,EAAA,EAAKE,MAAN,CACSC,QAASC,IACTC,OAAK,EACLC,QAAM,EACNC,KAAK,WACLC,MAAM,WACNC,YAAY,WACZC,QA3DA,CAAI,CAAEC,IAAK,KAAMC,MAAO,KAAMC,KAAM,SAClD,CAAEF,IAAK,KAAMC,MAAO,KAAMC,KAAM,WAChC,CAAEF,IAAK,KAAMC,MAAO,KAAMC,KAAM,WAChC,CAAEF,IAAK,KAAMC,MAAO,KAAMC,KAAM,eAyDlBC,SAAU,SAACC,EAAD,GAA4B,IAAlBR,EAAiB,EAAjBA,KAAMK,EAAW,EAAXA,MACxB9C,EAAOkD,cAAcT,EAAMK,IAE7BK,OAAQ,SAACF,EAAD,GAA6B,IAAnBR,EAAkB,EAAlBA,KAAMK,EAAY,EAAZA,MACtB9C,EAAOoD,WAAWX,EAAMK,IAE1BA,MAAO9C,EAAOgB,OAAOX,SACrBgD,MACErD,EAAOsD,QAAQjD,UAAYL,EAAOuD,OAAOlD,SACrCL,EAAOuD,OAAOlD,SACd,OAIhB,cAAC6B,EAAA,EAAKE,OAAN,GACUC,QAASC,IACTC,OAAK,EACLC,QAAM,EACNC,KAAK,YACLC,MAAM,aACNC,YAAY,KACZC,QA5EC,CAAC,CAAEC,IAAK,KAAMC,MAAO,KAAMC,KAAM,OAClD,CAAEF,IAAK,KAAMC,MAAO,KAAMC,KAAM,QA4EhBD,MAAO9C,EAAOgB,OAAOb,UACrB6C,SAAU,SAACC,EAAD,GAA4B,IAAlBR,EAAiB,EAAjBA,KAAMK,EAAW,EAAXA,MACxB9C,EAAOkD,cAAcT,EAAMK,IAE7BK,OAAQ,SAACF,EAAD,GAA6B,IAAnBR,EAAkB,EAAlBA,KAAMK,EAAY,EAAZA,MACtB9C,EAAOoD,WAAWX,EAAMK,KAbpC,sBAeiB9C,EAAOgB,OAAOb,WAf/B,sBAiBYH,EAAOsD,QAAQnD,WAAaH,EAAOuD,OAAOpD,UACtCH,EAAOuD,OAAOpD,UACd,MAnBhB,IAuBA,cAAC+B,EAAA,EAAKE,OAAN,GACUC,QAASC,IACTC,OAAK,EACLC,QAAM,EACNC,KAAK,aACLC,MAAM,cACNC,YAAY,KACZC,QAjGD,CAAC,CAACC,IAAI,KAAMC,MAAM,KAAMC,KAAK,OAAQ,CAACF,IAAI,KAAKC,MAAM,KAAKC,KAAK,OAAO,CAACF,IAAI,KAAKC,MAAM,KAAKC,KAAK,OAAO,CAACF,IAAI,KAAMC,MAAM,KAAMC,KAAK,QAkGlID,MAAO9C,EAAOgB,OAAOZ,WACrB4C,SAAU,SAACC,EAAD,GAA4B,IAAlBR,EAAiB,EAAjBA,KAAMK,EAAW,EAAXA,MACxB9C,EAAOkD,cAAcT,EAAMK,IAE7BK,OAAQ,SAACF,EAAD,GAA6B,IAAnBR,EAAkB,EAAlBA,KAAMK,EAAY,EAAZA,MACtB9C,EAAOoD,WAAWX,EAAMK,KAbpC,sBAeiB9C,EAAOgB,OAAOZ,YAf/B,sBAiBYJ,EAAOsD,QAAQlD,YAAcJ,EAAOuD,OAAOnD,WACvCJ,EAAOuD,OAAOnD,WACd,MAnBhB,IAuBA,cAAC8B,EAAA,EAAKE,MAAN,CACUC,QAASmB,IACTjB,OAAK,EACLkB,KAAK,OACLf,MAAM,cACND,KAAK,cACLE,YAAY,WACZQ,OAAQnD,EAAOoD,WACfN,MAAO9C,EAAOgB,OAAOV,YACrB+C,MACErD,EAAOsD,QAAQhD,aAAeN,EAAOuD,OAAOjD,YACxCN,EAAOuD,OAAOjD,YACd,KAENgB,MAAO,CAAEQ,UAAW,GAAG4B,MAAM,IAAIC,OAAO,iBAAiBC,aAAa,KAIhF,eAACxC,EAAA,EAAD,CAAMyC,QAAS,EAAf,UACE,cAACzC,EAAA,EAAKK,OAAN,UACF,cAACS,EAAA,EAAKE,MAAN,CACUC,QAASyB,IACTvB,OAAK,EACLkB,KAAK,OACLf,MAAM,WACND,KAAK,WACLE,YAAY,MACZQ,OAAQnD,EAAOoD,WACfN,MAAO9C,EAAOgB,OAAOT,SACrB8C,MACErD,EAAOsD,QAAQ/C,UAAYP,EAAOuD,OAAOhD,SACrCP,EAAOuD,OAAOhD,SACd,SAGR,cAACa,EAAA,EAAKK,OAAN,UACN,cAACS,EAAA,EAAKE,MAAN,CACQC,QAASyB,IACTvB,OAAK,EACLkB,KAAK,OACLf,MAAM,mBACND,KAAK,MACLE,YAAY,MACZQ,OAAQnD,EAAOoD,WACfN,MAAO9C,EAAOgB,OAAOR,IACrB6C,MACErD,EAAOsD,QAAQ9C,KAAOR,EAAOuD,OAAO/C,IAChCR,EAAOuD,OAAO/C,IACd,SAIR,cAACY,EAAA,EAAKK,OAAN,UACA,cAACS,EAAA,EAAKE,MAAN,CACEC,QAASyB,IACTvB,OAAK,EACLkB,KAAK,OACLf,MAAM,SACND,KAAK,SACLE,YAAY,MACZQ,OAAQnD,EAAOoD,WACfN,MAAO9C,EAAOgB,OAAOP,OACrB4C,MACErD,EAAOsD,QAAQ7C,QAAUT,EAAOuD,OAAO9C,OACnCT,EAAOuD,OAAO9C,OACd,YAKR,uBAAK,gCAAO,+CACZ,eAACyB,EAAA,EAAK6B,MAAN,WACA,cAAC7B,EAAA,EAAKE,MAAN,CACEC,QAASyB,IACTL,KAAK,SACLhB,KAAK,OACLE,YAAY,MACZQ,OAAQnD,EAAOoD,WACfN,MAAO9C,EAAOgB,OAAON,KACrB2C,MACErD,EAAOsD,QAAQ5C,MAAQV,EAAOuD,OAAO7C,KACjCV,EAAOuD,OAAO7C,KACd,OAEN,cAACsD,EAAA,EAAD,wBACF,gCAAO,yDACP,eAAC9B,EAAA,EAAK6B,MAAN,WACC,cAAC7B,EAAA,EAAKE,MAAN,CACCC,QAASyB,IACTL,KAAK,SACLhB,KAAK,UACLE,YAAY,MACZQ,OAAQnD,EAAOoD,WACfN,MAAO9C,EAAOgB,OAAOL,QACrB0C,MACErD,EAAOsD,QAAQ3C,SAAWX,EAAOuD,OAAO5C,QACpCX,EAAOuD,OAAO5C,QACd,OAGN,cAACqD,EAAA,EAAD,wBAEV,cAAC/B,EAAA,EAAD,CAASX,MAAO,CAAC2C,aAAa,KAC9B,cAACD,EAAA,EAAD,CAAQ1C,MAAO,CAAC4C,MAAM,QAAQC,YAAY,IAAMnC,MAAM,OAAOyB,KAAK,SAAlE,6B,OCjONW,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5661256a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Grid, Header, Button,Divider,Segment, Select, TextArea } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction App() {\n\n  const options=[   { key: 'in', value: 'in', text: 'India' },\n  { key: 'bs', value: 'bs', text: 'Bahamas' },\n  { key: 'bh', value: 'bh', text: 'Bahrain' },\n  { key: 'bd', value: 'bd', text: 'Bangladesh' },]\n\n  const options1=[{ key: 'dz', value: 'dz', text: 'XYZ' },\n{ key: 'ax', value: 'ax', text: 'ABC' }]\nconst options2=[{key:'ax' ,value:'ax' ,text:'123'} ,{key:'bx',value:'bx',text:'124'},{key:'cd',value:'cd',text:'125'},{key:'re' ,value:'re' ,text:'126'}]\n\n  const formik = useFormik({\n    initialValues: {\n      brandname: '',\n        partnumber: '',\n        location: '',\n        description:'',\n        quantity: '',\n        min: '',\n        expiry:'',\n        file:'',\n        product:''\n    },\n    validationSchema: Yup.object({\n      brandname: Yup.string()\n            .required('Brand Name is required'),\n        partnumber: Yup.string()\n            .required('Product Number is required'),\n        location: Yup.string()\n            .required('Required'),\n        quantity: Yup.string()\n            .required('Required'),\n        min: Yup.string()\n            .required('Required'),\n        expiry: Yup.string().required(\"Required\"),\n        description: Yup.string()\n            .required('Required'),\n        file: Yup.string()\n            .required('Required'),\n        product: Yup.string()\n            .required('Required')\n    }),\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 500}}>\n            <Segment stacked style={{padding:15 ,minHeight:680,backgroundColor:'#f8f8f8'}}>\n               <h2 style={{color:'teal'}}>Add Update Inventory!!</h2>\n               <Divider/>\n               <Form style={{textAlign:'left'}} onSubmit={formik.handleSubmit}>\n       <Form.Field\n                control={Select}\n                fluid\n                search\n                name=\"location\"\n                label=\"Location\"\n                placeholder=\"select..\"\n                options={options}\n                onChange={(event, { name, value })=> {\n                  formik.setFieldValue(name, value);\n                }}\n                onBlur={(event, { name, value }) => {\n                  formik.handleBlur(name, value);\n                }}\n                value={formik.values.location}\n                error={\n                  formik.touched.location && formik.errors.location\n                    ? formik.errors.location\n                    : null\n                }\n         />\n    \n      <Form.Field\n                control={Select}\n                fluid\n                search\n                name=\"brandname\"\n                label=\"Brand Name\"\n                placeholder=\"..\"\n                options={options1}\n                value={formik.values.brandname}\n                onChange={(event, { name, value })=> {\n                  formik.setFieldValue(name, value);\n                }}\n                onBlur={(event, { name, value }) => {\n                  formik.handleBlur(name, value);\n                }}\n                value={formik.values.brandname}\n                error={\n                  formik.touched.brandname && formik.errors.brandname\n                    ? formik.errors.brandname\n                    : null\n                }\n      />\n      \n      <Form.Field\n                control={Select}\n                fluid\n                search\n                name=\"partnumber\"\n                label=\"Part Number\"\n                placeholder=\"..\"\n                options={options2}\n                value={formik.values.partnumber}\n                onChange={(event, { name, value })=> {\n                  formik.setFieldValue(name, value);\n                }}\n                onBlur={(event, { name, value }) => {\n                  formik.handleBlur(name, value);\n                }}\n                value={formik.values.partnumber}\n                error={\n                  formik.touched.partnumber && formik.errors.partnumber\n                    ? formik.errors.partnumber\n                    : null\n                }\n      />\n\n      <Form.Field\n                control={TextArea}\n                fluid\n                type=\"text\"\n                label=\"Description\"\n                name='description'\n                placeholder=\"Enter...\"\n                onBlur={formik.handleBlur}\n                value={formik.values.description}\n                error={\n                  formik.touched.description && formik.errors.description\n                    ? formik.errors.description\n                    : null\n                }\n                style={{ minHeight: 70,width:445,border:'solid grey 1px',borderRadius:5 }}\n                />\n                \n  \n      <Grid columns={3}>\n        <Grid.Column>\n      <Form.Field\n                control={Input}\n                fluid\n                type=\"text\"\n                label=\"Quantity\"\n                name='quantity'\n                placeholder=\"...\"\n                onBlur={formik.handleBlur}\n                value={formik.values.quantity}\n                error={\n                  formik.touched.quantity && formik.errors.quantity\n                    ? formik.errors.quantity\n                    : null\n                }\n              /></Grid.Column>\n              <Grid.Column>\n        <Form.Field\n                control={Input}\n                fluid\n                type=\"text\"\n                label=\"Min SP(Per Unit)\"\n                name='min'\n                placeholder=\"...\"\n                onBlur={formik.handleBlur}\n                value={formik.values.min}\n                error={\n                  formik.touched.min && formik.errors.min\n                    ? formik.errors.min\n                    : null\n                }\n              /></Grid.Column>\n\n              <Grid.Column>\n              <Form.Field\n                control={Input}\n                fluid\n                type=\"text\"\n                label=\"Expiry\"\n                name='expiry'\n                placeholder=\"...\"\n                onBlur={formik.handleBlur}\n                value={formik.values.expiry}\n                error={\n                  formik.touched.expiry && formik.errors.expiry\n                    ? formik.errors.expiry\n                    : null\n                }\n              />\n              </Grid.Column>\n              </Grid>\n              <br/><label><b> Upload File</b></label>\n              <Form.Group>\n              <Form.Field\n                control={Input}\n                type=\"upload\"\n                name='file'\n                placeholder=\"...\"\n                onBlur={formik.handleBlur}\n                value={formik.values.file}\n                error={\n                  formik.touched.file && formik.errors.file\n                    ? formik.errors.file\n                    : null\n                }\n              /><Button>Browse</Button></Form.Group>\n              <label><b>Upload Product Picture</b></label>\n              <Form.Group>\n               <Form.Field\n                control={Input}\n                type=\"upload\"\n                name='product'\n                placeholder=\"...\"\n                onBlur={formik.handleBlur}\n                value={formik.values.product}\n                error={\n                  formik.touched.product && formik.errors.product\n                    ? formik.errors.product\n                    : null\n                }\n                \n              /><Button>Browse</Button></Form.Group>\n\n      <Divider style={{marginBottom:2}}/>\n      <Button style={{float:'right',marginRight:10,}} color='teal' type='submit' >Add+</Button>\n      </Form>\n      </Segment>\n            </Grid.Column>\n        </Grid>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'semantic-ui-css/semantic.min.css';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}